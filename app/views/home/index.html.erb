<!doctype html> 
<html lang="en"> 
<head> 
    <meta charset="UTF-8" />
    <title>Defenestrate</title>
    <script type="text/javascript" src="assets/phaser.min.js"></script>
    <style type="text/css">
        body {
            margin: 0;
        }
    </style>
</head>
<body>

<script type="text/javascript">

WebFontConfig = {

    active: function() { game.time.events.add(Phaser.Timer.SECOND, createText, this); },
    google: { families: [ 'Press Start 2P' ] }

};

var game = new Phaser.Game(1200, 700, Phaser.CANVAS, '', { preload: preload, create: create, update: update});

var player;
var bulletPoint;
var testBulletPoint;
var runAnim;

var cursors;
var meleeKey;

var map;
var walls;
var floor;
var windows;

var bullets;
var fireRate = 200;
var nextFire = 1;
var bullet;

var badGuys;

var defenestrateAnimate;

var enemyBullets;
var enemyBullets2;
var enemyBullets3;
var enemyBullets4;
var enemyBullets5;
var enemyBullets6;

var firingTimer = 0;
var enemyFireRate = 3000;
var enemyNextFire = 100;
var enemyNextFire2 = 100;
var enemyNextFire3 = 100;
var enemyNextFire4 = 100;
var enemyNextFire5 = 100;
var enemyNextFire6 = 100;

var bossFireRate = 2500;

var livingEnemies = [];
var bitmap;

var enemy1;
var enemy2;
var enemy3;
var enemy4;
var enemy5;
var enemy6;

var tween1;
var tween2;
var tween3;
var tween4;
var tween5;
var tween6;

var menuSong;
var sloMoEffect;
var fastMoEffect;
var shootEffect;
var gunShot;
var pauseButton;

var text = null;
var grd;
var score = 0;
var scoreString;
var scoreText;
var titleText;
var levelText;
var addScore;

function preload () {
    game.load.script('webfont', '//ajax.googleapis.com/ajax/libs/webfont/1/webfont.js');
    game.load.tilemap('map', 'assets/finalmap.json', null, Phaser.Tilemap.TILED_JSON);
    game.load.image('tile1', 'assets/tile_42.png');
    game.load.image('tile2', 'assets/tile_43.png');
    game.load.image('tile3', 'assets/tile_12.png');
    game.load.image('tile4', 'assets/tile_435.png');
    game.load.image('tile5', 'assets/tile_20.png');
    game.load.image('tile6', 'assets/tile_436.png');
    game.load.image('sidewalk', 'assets/finalmapbackground2.png')
    game.load.image('block', 'assets/raycastblock.png');
    game.load.atlas('johnwick', 'assets/jsonsprites.png', 'assets/jsonsprites.json');
    game.load.atlas('enemy_sprite', 'assets/finalEnemy.png', 'assets/finalEnemy.json');
    game.load.spritesheet('lookupbadguy', 'assets/bossEnemy.png', 100, 47);
    game.load.atlas('defenestrateAnimate', 'assets/theBoss.png', "assets/theBoss.json")
    game.load.image('bullet', 'assets/bulletred.png');
    game.load.image('blackbullet', 'assets/blackbullet.png');
    game.load.image('blackbullet2', 'assets/blackbullet2.png');
    game.load.audio('menuSong', 'assets/audio/OddLook.mp3');
    game.load.audio('slowMoEffect', 'assets/audio/slowmo.mp3');
    game.load.audio('fastMoEffect', 'assets/audio/fastmo.mp3');
    game.load.audio('shootEffect', 'assets/audio/shootEffect.mp3')
    game.load.audio('gunShot', 'assets/audio/gunshot.mp3')
    game.load.image('pause', 'assets/pause.png');

}

function create() {
    game.physics.startSystem(Phaser.Physics.ARCADE);

    game.add.tileSprite(0, 0, 1200, 700, 'sidewalk');

    bitmap = game.add.bitmapData(game.width, game.height);
    bitmap.context.fillStyle = '';
    bitmap.context.strokeStyle = 'rgb(255, 255, 255)';
    game.add.image(0, 0, bitmap);

    slowMoEffect = game.add.audio('slowMoEffect');
    fastMoEffect = game.add.audio('fastMoEffect');
    shootEffect = game.add.audio('shootEffect');
    gunShot = game.add.audio('gunShot');
    menuSong = game.add.audio('menuSong');
    shootEffect.volume = 1;
    gunShot.volume = .18
    menuSong.volume = .1
    menuSong.loop = true;
    menuSong.play();
    slowMoEffect.allowMultiple = false;

    cursors = game.input.keyboard.createCursorKeys();
    meleeKey = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);

    game.time.advancedTiming = true;
    game.time.desiredFps = 120;
    
    map = game.add.tilemap('map')
    map.addTilesetImage('tile_42', 'tile1');
    map.addTilesetImage('tile_43', 'tile2');
    map.addTilesetImage('tile_12', 'tile3');
    map.addTilesetImage('tile_435', 'tile4');
    map.addTilesetImage('tile_436', 'tile6');

    map.setCollisionBetween(1, 2400, true, walls);

    outerwalls = map.createLayer('outer_walls');
    floor = map.createLayer('floor');
    windows = map.createLayer('windows');

    badGuys = game.add.group();
    badGuys.enableBody = true;
    badGuys.setAll('anchor.x', 0.5);
    badGuys.setAll('anchor.y', 0.5);
    badGuys.physicsBodyType = Phaser.Physics.ARCADE;

    createBadGuys();

    player = game.add.sprite(440, 570, 'johnwick');
    game.physics.arcade.enable(player);
    player.anchor.setTo(0.5, 0.5)
    player.body.collideWorldBounds = true;
    runAnim = player.animations.add('run', Phaser.Animation.generateFrameNames ('run', 1, 19), 22, true);
    player.animations.add('melee', Phaser.Animation.generateFrameNames('hit', 1, 15), 18, true);
    player.bringToTop();

    defenestrateAnimate = game.add.sprite(1100, 450, 'defenestrateAnimate');
    game.physics.arcade.enable(defenestrateAnimate);
    player.anchor.setTo(0.5, 0.5)
    defenestrateAnimate.animations.add('falling', Phaser.Animation.generateFrameNames ('bloodSplat_', 0, 11), 11, false);

    enemy1 = game.add.sprite(150, 150, 'enemy_sprite');
    game.physics.arcade.enable(enemy1);
    enemy1.anchor.setTo(0.5, 0.5)
    enemy1.body.collideWorldBounds = true;
    enemy1.alive = true;
    enemy1.animations.add('enemyRun', Phaser.Animation.generateFrameNames ('enem', 1, 20), 10, true);
    enemy1.animations.add('bloodSplatter', Phaser.Animation.generateFrameNames ('splatter_1_000', 1, 7), 10, true);
    tween1= game.add.tween(enemy1).to( { x: 250 }, 2000, Phaser.Easing.Linear.None, true, 0, 1000, true);

    enemy2 = game.add.sprite(150, 300, 'enemy_sprite');
    game.physics.arcade.enable(enemy2);
    enemy2.anchor.setTo(0.5, 0.5)
    enemy2.body.collideWorldBounds = true;
    enemy2.alive = true;
    enemy2.animations.add('enemyRun', Phaser.Animation.generateFrameNames ('enem', 1, 20), 10, true);
    enemy2.animations.add('bloodSplatter', Phaser.Animation.generateFrameNames ('splatter_1_000', 1, 7), 10, true);
    tween2 = game.add.tween(enemy2).to( { x: 200, y: 350 }, 2000, Phaser.Easing.Linear.None, true, 0, 1000, true);

    enemy3 = game.add.sprite(450, 150, 'enemy_sprite');
    game.physics.arcade.enable(enemy3);
    enemy3.anchor.setTo(0.5, 0.5)
    enemy3.body.collideWorldBounds = true;
    enemy3.alive = true;
    enemy3.animations.add('enemyRun', Phaser.Animation.generateFrameNames ('enem', 1, 20), 10, true);
    enemy3.animations.add('bloodSplatter', Phaser.Animation.generateFrameNames ('splatter_1_000', 1, 7), 10, true);
    tween3 = game.add.tween(enemy3).to( { y: 250 }, 2000, Phaser.Easing.Linear.None, true, 0, 1000, true);

    enemy4 = game.add.sprite(700, 150, 'enemy_sprite', 8);
    game.physics.arcade.enable(enemy4);
    enemy4.anchor.setTo(0.5, 0.5)
    enemy4.body.collideWorldBounds = true;
    enemy4.animations.add('enemyRun', Phaser.Animation.generateFrameNames ('enem', 1, 20), 10, true);
    enemy4.animations.add('bloodSplatter', Phaser.Animation.generateFrameNames ('splatter_1_000', 1, 7), 10, true);
    enemy4.alive = true;

    enemy5 = game.add.sprite(700, 300, 'enemy_sprite', 8);
    game.physics.arcade.enable(enemy5);
    enemy5.anchor.setTo(0.5, 0.5)
    enemy5.body.collideWorldBounds = true;
    enemy5.alive = true;
    enemy5.animations.add('enemyRun', Phaser.Animation.generateFrameNames ('enem', 1, 20), 10, true);
    enemy5.animations.add('bloodSplatter', Phaser.Animation.generateFrameNames ('splatter_1_000', 1, 7), 10, true);
    tween5 = game.add.tween(enemy5).to( { y: 400 }, 2000, Phaser.Easing.Linear.None, true, 0, 1000, true);

    enemy6 = game.add.sprite(150, 450, 'enemy_sprite');
    game.physics.arcade.enable(enemy6);
    enemy6.anchor.setTo(0.5, 0.5)
    enemy6.body.collideWorldBounds = true;
    enemy6.alive = true;
    enemy6.animations.add('enemyRun', Phaser.Animation.generateFrameNames ('enem', 1, 20), 10, true);
    enemy6.animations.add('bloodSplatter', Phaser.Animation.generateFrameNames ('splatter_1_000', 1, 7), 10, true);
    tween6 = game.add.tween(enemy6).to( { y: 550 }, 2000, Phaser.Easing.Linear.None, true, 0, 1000, true);

    enemyBullets = game.add.group();
    enemyBullets.enableBody = true;
    enemyBullets.physicsBodyType = Phaser.Physics.ARCADE;
    enemyBullets.createMultiple(30, 'blackbullet');
    enemyBullets.setAll('anchor.x', 0.5);
    enemyBullets.setAll('anchor.y', 0.5);
    enemyBullets.setAll('outOfBoundsKill', true);
    enemyBullets.setAll('checkWorldBounds', true);

    enemyBullets2 = game.add.group();
    enemyBullets2.enableBody = true;
    enemyBullets2.physicsBodyType = Phaser.Physics.ARCADE;
    enemyBullets2.createMultiple(30, 'blackbullet2');
    enemyBullets2.setAll('anchor.x', 0.5);
    enemyBullets2.setAll('anchor.y', 0.5);
    enemyBullets2.setAll('outOfBoundsKill', true);
    enemyBullets2.setAll('checkWorldBounds', true);

    enemyBullets3 = game.add.group();
    enemyBullets3.enableBody = true;
    enemyBullets3.physicsBodyType = Phaser.Physics.ARCADE;
    enemyBullets3.createMultiple(30, 'blackbullet');
    enemyBullets3.setAll('anchor.x', 0.5);
    enemyBullets3.setAll('anchor.y', 0.5);
    enemyBullets3.setAll('outOfBoundsKill', true);
    enemyBullets3.setAll('checkWorldBounds', true);

    enemyBullets4 = game.add.group();
    enemyBullets4.enableBody = true;
    enemyBullets4.physicsBodyType = Phaser.Physics.ARCADE;
    enemyBullets4.createMultiple(30, 'blackbullet');
    enemyBullets4.setAll('anchor.x', 0.5);
    enemyBullets4.setAll('anchor.y', 0.5);
    enemyBullets4.setAll('outOfBoundsKill', true);
    enemyBullets4.setAll('checkWorldBounds', true);

    enemyBullets5 = game.add.group();
    enemyBullets5.enableBody = true;
    enemyBullets5.physicsBodyType = Phaser.Physics.ARCADE;
    enemyBullets5.createMultiple(30, 'blackbullet');
    enemyBullets5.setAll('anchor.x', 0.5);
    enemyBullets5.setAll('anchor.y', 0.5);
    enemyBullets5.setAll('outOfBoundsKill', true);
    enemyBullets5.setAll('checkWorldBounds', true);

    enemyBullets6 = game.add.group();
    enemyBullets6.enableBody = true;
    enemyBullets6.physicsBodyType = Phaser.Physics.ARCADE;
    enemyBullets6.createMultiple(30, 'blackbullet');
    enemyBullets6.setAll('anchor.x', 0.5);
    enemyBullets6.setAll('anchor.y', 0.5);
    enemyBullets6.setAll('outOfBoundsKill', true);
    enemyBullets6.setAll('checkWorldBounds', true);

    bullets = game.add.group();
    game.physics.arcade.enable(bullets);
    bullets.enableBody = true;
    bullets.createMultiple(10, 'bullet');
    bullets.setAll('checkWorldBounds', true);
    bullets.setAll('outOfBoundsKill', true);

    game.camera.follow(player);

    var NUMBER_OF_WALLS = 3;
    walls = game.add.group();
    var i, x, y;
    for(i = 0; i < NUMBER_OF_WALLS; i++) {
        x = 802;
        y = i * 200 + 150 ;
        game.add.image(x, y, 'block', 0, walls).scale.setTo(.5, 8);
    }
}

function createText() {

    scoreString = 'Score: ';
    scoreText = game.add.text(850, 4, scoreString + score, {  fill: '#fff' });
    levelText = game.add.text(10, 4, "Level - 1", {fill: "#fff"});

    scoreText.font = 'Press Start 2P';
    levelText.font = 'Press Start 2P';

    scoreText.stroke = '#000000';
    scoreText.strokeThickness = 2;
    scoreText.setShadow(5, 5, 'rgba(0,0,0,0.5)', 5);

    levelText.stroke = '#000000';
    levelText.strokeThickness = 2;
    levelText.setShadow(5, 5, 'rgba(0,0,0,0.5)', 5);

}

function createBadGuys(){

    for (var y = 0; y < 1; y++)
    {
        for (var x = 0; x < 1; x++){
            var badGuy = badGuys.create(x, y * 250, 'lookupbadguy');
            badGuy.anchor.setTo(0.5, 0.5)
        }
    }
    badGuys.x = 980
    badGuys.y = 460
}

function update() {

    player.body.velocity.x = 0;
    player.body.velocity.y = 0;
    player.rotation = game.physics.arcade.angleToPointer(player)

    enemy1.rotation = game.physics.arcade.angleBetween(enemy1, player);
    enemy2.rotation = game.physics.arcade.angleBetween(enemy2, player);
    enemy3.rotation = game.physics.arcade.angleBetween(enemy3, player);
    enemy4.rotation = game.physics.arcade.angleBetween(enemy4, player);
    enemy5.rotation = game.physics.arcade.angleBetween(enemy5, player);
    enemy6.rotation = game.physics.arcade.angleBetween(enemy6, player);
    
    game.physics.arcade.collide(player, outerwalls);
    game.physics.arcade.collide(enemy1, outerwalls);
    game.physics.arcade.collide(enemy2, outerwalls);
    game.physics.arcade.collide(enemy3, outerwalls);
    game.physics.arcade.collide(enemy4, outerwalls);
    game.physics.arcade.collide(enemy5, outerwalls);
    game.physics.arcade.collide(enemy6, outerwalls);
    game.physics.arcade.collide(bullets, outerwalls, collisionHandler, null, this);
    game.physics.arcade.collide(enemy1, bullets, youDead1, null, this);
    game.physics.arcade.collide(enemy2, bullets, youDead2, null, this);
    game.physics.arcade.collide(enemy3, bullets, youDead3, null, this);
    game.physics.arcade.collide(enemy4, bullets, youDead4, null, this);
    game.physics.arcade.collide(enemy5, bullets, youDead5, null, this);
    game.physics.arcade.collide(enemy6, bullets, youDead6, null, this);
    game.physics.arcade.overlap(player, badGuys, defenestrate, null, this)
    game.physics.arcade.collide(enemyBullets, outerwalls, bulletGoAway, null, this);
    game.physics.arcade.collide(enemyBullets2, outerwalls, bulletGoAway2, null, this);
    game.physics.arcade.collide(enemyBullets3, outerwalls, bulletGoAway3, null, this);
    game.physics.arcade.collide(enemyBullets4, outerwalls, bulletGoAway4, null, this);
    game.physics.arcade.collide(enemyBullets5, outerwalls, bulletGoAway5, null, this);
    game.physics.arcade.collide(enemyBullets6, outerwalls, bulletGoAway6, null, this);
    game.physics.arcade.overlap(badGuys, bullets, enemyKill, null, this);
    game.physics.arcade.overlap(enemyBullets, player, playerKill1, null, this);
    game.physics.arcade.overlap(enemyBullets2, player, playerKill2, null, this);
    game.physics.arcade.overlap(enemyBullets3, player, playerKill3, null, this);
    game.physics.arcade.overlap(enemyBullets4, player, playerKill4, null, this);
    game.physics.arcade.overlap(enemyBullets5, player, playerKill5, null, this);
    game.physics.arcade.overlap(enemyBullets6, player, playerKill6, null, this);
    game.physics.arcade.overlap(enemyBullets, bullets, bulletKill1, null, this);
    game.physics.arcade.overlap(enemyBullets2, bullets, bulletKill2, null, this);
    game.physics.arcade.overlap(enemyBullets3, bullets, bulletKill3, null, this);
    game.physics.arcade.overlap(enemyBullets4, bullets, bulletKill4, null, this);
    game.physics.arcade.overlap(enemyBullets5, bullets, bulletKill5, null, this);
    game.physics.arcade.overlap(enemyBullets6, bullets, bulletKill6, null, this);


    if (cursors.up.isDown){
        game.time.slowMotion = 1
        player.body.velocity.y = -150;
        player.animations.play('run');

        if (cursors.up.isDown && cursors.right.isDown)
        {
            game.time.slowMotion = 1
            player.body.velocity.x = 150;
            player.body.velocity.y = -150;
            player.animations.play('run');
        }
        else if (cursors.up.isDown && cursors.left.isDown)
        {
            game.time.slowMotion = 1
            player.body.velocity.x = -150;
            player.body.velocity.y = -150;
            player.animations.play('run');
        }
    }
    else if (cursors.down.isDown)
    {
        game.time.slowMotion = 1
        player.body.velocity.y = 150;
        player.animations.play('run');

        if (cursors.down.isDown && cursors.right.isDown)
        {
            game.time.slowMotion = 1
            player.body.velocity.x = 150;
            player.body.velocity.y = 150;
            player.animations.play('run');
        }
        else if (cursors.down.isDown && cursors.left.isDown)
        {
            game.time.slowMotion = 1
            player.body.velocity.x = -150;
            player.body.velocity.y = 150;
            player.animations.play('run');
        }
    }
    else if (cursors.left.isDown)
    {
        game.time.slowMotion = 1
        player.body.velocity.x = -150;
        player.animations.play('run');
    }
    else if (cursors.right.isDown)
    {
        game.time.slowMotion = 1;
        player.body.velocity.x = 150;
        player.animations.play('run');
    }
    else if (meleeKey.isDown){
        game.time.slowMotion = 1;
        player.animations.play('melee');
    } 

    else
    {
        game.time.slowMotion = 12
        player.animations.stop();
        player.frame = 0;
    }
    if (game.input.activePointer.isDown){
        fire();
    }

    bulletPoint = new Phaser.Point(player.x + 29, player.y + 8);
    bulletPoint.rotate(player.x, player.y, player.rotation);
    enemy1BulletPoint = new Phaser.Point(enemy1.x + 38, enemy1.y + 8);
    enemy1BulletPoint.rotate(enemy1.x, enemy1.y, enemy1.rotation);
    enemy2BulletPoint = new Phaser.Point(enemy2.x + 38, enemy2.y + 8);
    enemy2BulletPoint.rotate(enemy2.x, enemy2.y, enemy2.rotation);
    enemy3BulletPoint = new Phaser.Point(enemy3.x + 38, enemy3.y + 8);
    enemy3BulletPoint.rotate(enemy3.x, enemy3.y, enemy3.rotation);
    enemy4BulletPoint = new Phaser.Point(enemy4.x + 38, enemy4.y + 8);
    enemy4BulletPoint.rotate(enemy4.x, enemy4.y, enemy4.rotation);
    enemy5BulletPoint = new Phaser.Point(enemy5.x + 38, enemy5.y + 8);
    enemy5BulletPoint.rotate(enemy5.x, enemy5.y, enemy5.rotation);
    enemy6BulletPoint = new Phaser.Point(enemy6.x + 38, enemy6.y + 8);
    enemy6BulletPoint.rotate(enemy6.x, enemy6.y, enemy6.rotation);
    bossBulletPoint = new Phaser.Point(badGuys.x + 60, badGuys.y + 10);
    bossBulletPoint.rotate(badGuys.x, badGuys.y, badGuys.rotation);

    bitmap.context.clearRect(0, 0, this.game.width, this.game.height);

    badGuys.forEach(function(findMe){
        var ray = new Phaser.Line(findMe.x + 235, findMe.y + 67.5, player.x, player.y);
        var intersect = getWallIntersection(ray);
        findMe.anchor.setTo(.5, .5)

        if (intersect) {

        }
        else{
            bitmap.context.beginPath();
            bitmap.context.moveTo(findMe.x + 935, findMe.y + 67.5);
            bitmap.context.lineTo(player.x, player.y);
            // bitmap.context.stroke();
        }

    });

    bitmap.dirty = true;

    if (player.alive == true){
    enemy1Shoot();
    enemy2Shoot();
    enemy3Shoot();
    enemy4Shoot();
    enemy5Shoot();
    enemy6Shoot();
    }
    else {
        gameOver();
    }
    if (runAnim.isPlaying == true){
    slowMoPlayer();
    }
}

function getWallIntersection(ray){
    var distanceToWall = Number.POSITIVE_INFINITY;
    var closestIntersection = null;

    walls.forEach(function(wall){
        var lines = [
            new Phaser.Line(wall.x, wall.y, wall.x + wall.width, wall.y),
            new Phaser.Line(wall.x, wall.y, wall.x, wall.y + wall.height),
            new Phaser.Line(wall.x + wall.width, wall.y,
                wall.x + wall.width, wall.y + wall.height),
            new Phaser.Line(wall.x, wall.y + wall.height,
                wall.x + wall.width, wall.y + wall.height)
        ];

        for(var i = 0; i < lines.length; i++) {
            var intersect = Phaser.Line.intersects(ray, lines[i]);
            if (intersect) {
                // Find the closest intersection
                distance =
                    game.math.distance(ray.start.x, ray.start.y, intersect.x, intersect.y);
                if (distance < distanceToWall && badGuys.alive == true) {
                    distanceToWall = distance;
                    closestIntersection = intersect;
                    badGuys.rotation = game.physics.arcade.angleBetween(badGuys, player);
                    bossShoots();
                }
            }
        }

    })
}

function defenestrate(player, badGuys) {

    if (meleeKey.isDown){
        game.time.events.add((Phaser.Timer.SECOND/2), killBaddy, this);
    }
        function killBaddy() {
            badGuys.y += 200;
            badGuys.kill();
            defenestrateAnimate.animations.play('falling');
            score += 500;
            scoreText.text = scoreString + score;
            var addScore = game.add.text(game.world.centerX, game.world.centerY, "DEFENESTRATION !!!", {  fill: '#fff' });
            addScore.font = 'Press Start 2P'
            addScore.stroke = '#000000';
            addScore.strokeThickness = 2;
            addScore.setShadow(5, 5, 'rgba(0,0,0,0.5)', 5);
            game.add.tween(addScore).to({y: game.world.centerY - 100 }, 2000, Phaser.Easing.Linear.None, true);
            game.add.tween(addScore).to({alpha: 0}, 2000, Phaser.Easing.Linear.None, true);
            
            if (enemy1.alive == false && enemy2.alive == false && enemy3.alive == false && enemy4.alive == false && enemy5.alive == false && enemy6.alive == false){
                youwin = game.add.text(game.world.centerX - 200, game.world.centerY, "You Win!", {  fill: '#fff' });
                youwin.font = 'Press Start 2P'
                youwin.stroke = '#000000';
                youwin.strokeThickness = 2;
                youwin.fontsize = 300;
                youwin.setShadow(5, 5, 'rgba(0,0,0,0.5)', 5);
                youwin.align = 'center';
             }
        }    
}

function slowMoPlayer() {
        slowMoEffect.play();
}

function fire() {
    if (player.alive == true){
        if (cursors.left.isUp && cursors.right.isUp && cursors.up.isUp && cursors.down.isUp){
        shootEffect.play();
        }
        else {
            gunShot.play();
        }
        if (game.time.now > nextFire && bullets.countDead() > 0)
        {
            nextFire = game.time.now + fireRate;

            bullet = bullets.getFirstDead();

            bullet.reset(bulletPoint.x, bulletPoint.y);

            bullet.rotation = game.physics.arcade.moveToPointer(bullet, 1000, game.input.activePointer);

        }
    }
}

function enemy1Shoot() {
    if (enemy1.alive == true){
        if (game.time.now > enemyNextFire && enemyBullets.countDead() > 0)
        {
            enemy1.animations.play('enemyRun');
            enemyNextFire = game.time.now + enemyFireRate;
            bullet = enemyBullets.getFirstDead();
            bullet.reset(enemy1BulletPoint.x, enemy1BulletPoint.y);
            game.physics.arcade.moveToObject(bullet, player, 450);
        }
    }
}

function enemy2Shoot() {
    if (enemy2.alive == true){
        if (game.time.now > enemyNextFire2 && enemyBullets2.countDead() > 0)
        {
            enemy2.animations.play('enemyRun');
            enemyNextFire2 = game.time.now + enemyFireRate;
            bullet = enemyBullets2.getFirstDead();
            bullet.reset(enemy2BulletPoint.x, enemy2BulletPoint.y);
            game.physics.arcade.moveToObject(bullet, player, 450);
        }
    }
}

function enemy3Shoot() {
    if (enemy3.alive == true){
        if (game.time.now > enemyNextFire3 && enemyBullets3.countDead() > 0)
        {
            enemy3.animations.play('enemyRun');
            enemyNextFire3 = game.time.now + enemyFireRate;
            bullet = enemyBullets3.getFirstDead();
            bullet.reset(enemy3BulletPoint.x, enemy3BulletPoint.y);
            game.physics.arcade.moveToObject(bullet, player, 450);
        }
    }
}

function enemy4Shoot() {
    if (enemy4.alive == true){
        if (game.time.now > enemyNextFire4 && enemyBullets4.countDead() > 0)
        {
            enemyNextFire4 = game.time.now + enemyFireRate;
            bullet = enemyBullets4.getFirstDead();
            bullet.reset(enemy4BulletPoint.x, enemy4BulletPoint.y);
            game.physics.arcade.moveToObject(bullet, player, 450);
        }
    }
}

function enemy5Shoot() {
    if (enemy5.alive == true){
        if (game.time.now > enemyNextFire5 && enemyBullets5.countDead() > 0)
        {
            enemy5.animations.play('enemyRun');
            enemyNextFire5 = game.time.now + enemyFireRate;
            bullet = enemyBullets5.getFirstDead();
            bullet.reset(enemy5BulletPoint.x, enemy5BulletPoint.y);
            game.physics.arcade.moveToObject(bullet, player, 450);
        }
    }
}

function enemy6Shoot() {
    if (enemy6.alive == true){
        if (game.time.now > enemyNextFire6 && enemyBullets6.countDead() > 0)
        {
            enemy6.animations.play('enemyRun');

            enemyNextFire6 = game.time.now + enemyFireRate;

            bullet = enemyBullets6.getFirstDead();

            bullet.reset(enemy6BulletPoint.x, enemy6BulletPoint.y);

            game.physics.arcade.moveToObject(bullet, player, 450);
        }
    }
}

function bossShoots() {

    enemyBullet = enemyBullets.getFirstExists(false);
    livingEnemies.length=0;
    badGuys.forEachAlive(function(badGuy){
        livingEnemies.push(badGuy);
    });

if (game.time.now > enemyNextFire && enemyBullets.countDead() && livingEnemies.length > 0)
    {
        enemyNextFire = game.time.now + bossFireRate;
        enemyBullet.reset(bossBulletPoint.x, bossBulletPoint.y);
        game.physics.arcade.moveToObject(enemyBullet, player, 500);
        firingTimer = game.time.now ;
    }
}

function playerKill1(enemyBullets, player) {
    enemyBullets.kill();
    player.kill();
}

function playerKill2(enemyBullets2, player) {
    enemyBullets2.kill();
    player.kill();
}

function playerKill3(enemyBullets3, player) {
    enemyBullets3.kill();
    player.kill();
}

function playerKill4(enemyBullets4, player) {
    enemyBullets4.kill();
    player.kill();
}

function playerKill5(enemyBullets5, player) {
    enemyBullets5.kill();
    player.kill();
}

function playerKill6(enemyBullets6, player) {
    enemyBullets6.kill();
    player.kill();
}

function collisionHandler (bullets, walls) {
    bullets.kill();    
}

function bulletKill1(enemyBullets, bullets) {
    enemyBullets.kill();
    bullets.kill();
    score += 10;
    scoreText.text = scoreString + score; 
}

function bulletKill2(enemyBullets2, bullets) {
    enemyBullets2.kill();
    bullets.kill();
    score += 10;
    scoreText.text = scoreString + score;
}

function bulletKill3(enemyBullets3, bullets) {
    enemyBullets3.kill();
    bullets.kill();
    score += 10;
    scoreText.text = scoreString + score;
}

function bulletKill4(enemyBullets4, bullets) {
    enemyBullets4.kill();
    bullets.kill();
    score += 10;
    scoreText.text = scoreString + score;
}

function bulletKill5(enemyBullets5, bullets) {
    enemyBullets5.kill();
    bullets.kill();
    score += 10;
    scoreText.text = scoreString + score;
}

function bulletKill6(enemyBullets6, bullets) {
    enemyBullets6.kill();
    bullets.kill();
    score += 10;
    scoreText.text = scoreString + score;
}

function youDead1(enemy1, bullets){
    enemy1.animations.play('bloodSplatter', 10, false, true);
    bullets.kill();
    score += 100;
    scoreText.text = scoreString + score;  
    var addScore = game.add.text(enemy1.x - 50, enemy1.y - 50, "+100", { fill: '#fff' });
    addScore.font = 'Press Start 2P';
    addScore.stroke = '#000000';
    addScore.strokeThickness = 2;
    addScore.setShadow(5, 5, 'rgba(0,0,0,0.5)', 5);
    game.add.tween(addScore).to({y: enemy1.y - 100 }, 1500, Phaser.Easing.Linear.None, true);
    game.add.tween(addScore).to({alpha: 0}, 1500, Phaser.Easing.Linear.None, true);
    
}

function youDead2(enemy2, bullets){
    enemy2.animations.play('bloodSplatter', 10, false, true);
    bullets.kill();
    score += 100;
    scoreText.text = scoreString + score;
    var addScore = game.add.text(enemy2.x - 50, enemy2.y - 50, "+100", { fill: '#fff' });
    addScore.font = 'Press Start 2P'
    addScore.stroke = '#000000';
    addScore.strokeThickness = 2;
    addScore.setShadow(5, 5, 'rgba(0,0,0,0.5)', 5);
    game.add.tween(addScore).to({y: enemy2.y - 100 }, 1500, Phaser.Easing.Linear.None, true);
    game.add.tween(addScore).to({alpha: 0}, 1500, Phaser.Easing.Linear.None, true);
}

function youDead3(enemy3, bullets){
    enemy3.animations.play('bloodSplatter', 10, false, true);
    bullets.kill();
    score += 100;
    scoreText.text = scoreString + score;
    var addScore = game.add.text(enemy3.x - 50, enemy3.y - 50, "+100", { fill: '#fff' });
    addScore.font = 'Press Start 2P';
    addScore.stroke = '#000000';
    addScore.strokeThickness = 2;
    addScore.setShadow(5, 5, 'rgba(0,0,0,0.5)', 5);
    game.add.tween(addScore).to({y: enemy3.y - 100 }, 1500, Phaser.Easing.Linear.None, true);
    game.add.tween(addScore).to({alpha: 0}, 1500, Phaser.Easing.Linear.None, true);
}

function youDead4(enemy4, bullets){
    enemy4.animations.play('bloodSplatter', 10, false, true);
    bullets.kill();
    score += 100;
    scoreText.text = scoreString + score;
    var addScore = game.add.text(enemy4.x - 50, enemy4.y - 50, "+100", { fill: "#fff"});
    addScore.font = 'Press Start 2P';
    addScore.stroke = '#000000';
    addScore.strokeThickness = 2;
    addScore.setShadow(5, 5, 'rgba(0,0,0,0.5)', 5);
    game.add.tween(addScore).to({y: enemy4.y - 100 }, 1500, Phaser.Easing.Linear.None, true);
    game.add.tween(addScore).to({alpha: 0}, 1500, Phaser.Easing.Linear.None, true);
}

function youDead5(enemy5, bullets){
    enemy5.animations.play('bloodSplatter', 10, false, true);
    bullets.kill();
    score += 100;
    scoreText.text = scoreString + score;
    var addScore = game.add.text(enemy5.x - 50, enemy5.y - 50, "+100", { fill: '#fff' });
    addScore.font = 'Press Start 2P'
    addScore.stroke = '#000000';
    addScore.strokeThickness = 2;
    addScore.setShadow(5, 5, 'rgba(0,0,0,0.5)', 5);
    game.add.tween(addScore).to({y: enemy5.y - 100 }, 1500, Phaser.Easing.Linear.None, true);
    game.add.tween(addScore).to({alpha: 0}, 1500, Phaser.Easing.Linear.None, true);
}

function youDead6(enemy6, bullets){
    enemy6.animations.play('bloodSplatter', 10, false, true);
    bullets.kill();
    score += 100;
    scoreText.text = scoreString + score;
    var addScore = game.add.text(enemy6.x - 50, enemy6.y - 50, "+100", { fill: '#fff' });
    addScore.font = 'Press Start 2P'
    addScore.stroke = '#000000';
    addScore.strokeThickness = 2;
    addScore.setShadow(5, 5, 'rgba(0,0,0,0.5)', 5);
    game.add.tween(addScore).to({y: enemy6.y - 100 }, 1500, Phaser.Easing.Linear.None, true);
    game.add.tween(addScore).to({alpha: 0}, 1500, Phaser.Easing.Linear.None, true);
}

function bulletGoAway (enemyBullets, outerwalls){
    enemyBullets.kill()
}

function bulletGoAway2 (enemyBullets2, outerwalls){
    enemyBullets2.kill()
}

function bulletGoAway3 (enemyBullets3, outerwalls){
    enemyBullets3.kill()
}

function bulletGoAway4 (enemyBullets4, outerwalls){
    enemyBullets4.kill()
}

function bulletGoAway5 (enemyBullets5, outerwalls){
    enemyBullets5.kill()
}

function bulletGoAway6 (enemyBullets6, outerwalls){
    enemyBullets6.kill()
}

function enemyKill (badGuys, bullets) {
    bullets.kill()
}

function gameOver() {
    var gameover = game.add.text(game.world.centerX - 200, game.world.centerY, "Game Over", {  fill: '#fff' });
        gameover.font = 'Press Start 2P'
        gameover.stroke = '#000000';
        gameover.strokeThickness = 2;
        gameover.fontsize = 300;
        gameover.setShadow(5, 5, 'rgba(0,0,0,0.5)', 5);
}

</script>
    </body>
</html>